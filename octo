#!/bin/sh

createCMake() {
   echo "cmake_minimum_required(VERSION 3.0)" >> CMakeLists.txt;
   echo "project(${1})" >> CMakeLists.txt;

   echo 'file(GLOB_RECURSE sources "src/*.c*")' >> CMakeLists.txt;
   echo 'file(GLOB_RECURSE headers "include/*.h*")' >> CMakeLists.txt;
   echo "set(EXECUTABLE_OUTPUT"_'PATH bin/${CMAKE_BUILD_TYPE})' >> CMakeLists.txt;
   echo 'include_directories(${CMAKE_CURREND_SOURCE_DIR}/include)' >> CMakeLists.txt;
   echo '' >> CMakeLists.txt;
   echo '# add a lib' >> CMakeLists.txt;
   echo '# set (LLIB_LIB libllib.so)' >> CMakeLists.txt;
   echo '# link_directories(path/to/lib)' >> CMakeLists.txt;
   echo '# include_directories(path/to/headers)' >> CMakeLists.txt;

   echo "add_executable(${1}" '${sources})' >> CMakeLists.txt; 

   echo '# target_lin_libraries(exe ${LLIB_LIB})' >> CMakeLists.txt;
}

createMain() {
   echo '#include <cstdlib>' >> src/main.cpp;
   echo '#include <iostream>' >> src/main.cpp;
   echo 'int main (void) {' >> src/main.cpp;
   echo "\tstd::cout" '<< "Hello World !" << std::endl;' >> src/main.cpp;
   echo "\treturn" 'EXIT_SUCCESS;' >> src/main.cpp;
   echo '}' >> src/main.cpp;
}

createGitignore() {
   echo "build/" >> .gitignore;
}

COMMAND="DEFAULT";
EXTENSION="DEFAULT";
SPECIFIER="--bin";

while [ $# -gt 0 ]
do
   key="$1"
   case $key in
      new)
         COMMAND="$key"
         EXTENSION="$2"
         shift # past argument
         ;;
      build|run)
         COMMAND="$key"
         ;;
      *)
         if [ ${COMMAND} = "DEFAULT" -o ${EXTENSION} = "DEFAULT" ]
         then
            echo "\033[1;31mError: command ${key} does not exists.\033[0m";
            exit 1;
         else
            EXTENSION="$key"
         fi
         ;;
   esac
   shift # past argument or value
done

if [ $COMMAND = "new" ]
then
   if [ -d $EXTENSION ]
   then
      echo "\033[1;31mError: ${EXTENSION} already exists.\033[0m";
   else
      echo "\033[1;32mInfo\033[0m: Creating directories...";
      mkdir ${EXTENSION} ${EXTENSION}/src ${EXTENSION}/include ${EXTENSION}/build;
      cd $EXTENSION;
      echo "\033[1;32mInfo\033[0m: Creating CMakeLists...";
      createCMake $EXTENSION;
      echo "\033[1;32mInfo\033[0m: Creating Hello World...";
      createMain;
      echo "\033[1;32mInfo\033[0m: Initializing Git...";
      createGitignore;
      git init -q;
      git add .;
      git commit -q -am 'OctoCommit: Initial commit';
      echo "\033[1;32mInfo\033[0m: All setup done !";
   fi
else
   rm -f build/CMakeCache.txt;
   if [ -d build/ ]
   then
      cd build/;
   else
      mkdir build/;
      cd build/;
   fi
   if [ $EXTENSION = "release" ]
   then
      if [ $COMMAND = "build" ]
      then
         cmake -DCMAKE_BUILD_TYPE=Release ..;
         make;
      elif [ $COMMAND = 'run' ]
      then
         cmake -DCMAKE_BUILD_TYPE=Release ..;
         make;
         name=`cat ../CMakeLists.txt | grep "project" | egrep -o "\(.+\)" | egrep -o "[^()]+"`;
         ./bin/Release/${name};
      fi
   else
      if [ $COMMAND = "build" ]
      then
         cmake -DCMAKE_BUILD_TYPE=Debug ..;
         make;
      elif [ $COMMAND = 'run' ]
      then
         cmake -DCMAKE_BUILD_TYPE=Debug ..;
         make;
         name=`cat ../CMakeLists.txt | grep "project" | egrep -o "\(.+\)" | egrep -o "[^()]+"`;
         ./bin/Debug/${name};
      fi
   fi
fi

exit 0;
